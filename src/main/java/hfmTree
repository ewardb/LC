2 3 6  7 10 19 21 32












              100
     40                 60
  19     21        28          32
                11     17
              5   6  7   10
            2   3



19      00
21      01
32      11
6       1001
7       1010
10      1011
2       10000
3       10001


WPF 261 = 19*2 + 21*2 + 32*2 + 6*4 + 7*4 + 10*4 + 2*5 + 3*5

0110000010111111
0110000010111111

public class Main {
   public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        while (in.hasNext()) {//注意while处理多个case
            int n = in.nextInt();
            long r = in.nextLong();
            long avg = in.nextLong();
            long[][] arr = new long[n][2];
            long total = avg*n;//需要的分数
            long score = 0;//现在的分数
            for(int i = 0;i<n;i++){
                arr[i][0] = in.nextLong();//平时成绩
                arr[i][1] = in.nextLong();//时间
                score += arr[i][0];
            }
            sort(arr);
            long time = 0;
            int i = 0;
            while(score<total&&i<n){
                if(arr[i][0]<r){
                    //第i门课没有满分
                    time += arr[i][1];
                    score++;
                    arr[i][0] += 1;
                }else{
                    i++;
                }
            }
            System.out.println(time);
                 }
                   in.close();
                }
                //对时间进行排序
                public static void sort(long[][]a){

                    for(int i = 0;i<a.length-1;i++){
                        boolean flag = true;
                        for(int j = 0;j<a.length-1-i;j++){
                            if(a[j][1]>a[j+1][1]){
                                long temp = a[j][0];
                                long temp2 = a[j][1];
                                a[j][0] = a[j+1][0];
                                a[j+1][0] = temp;
                                a[j][1] = a[j+1][1];
                                a[j+1][1] = temp2;
                                flag = false;
                            }
                        }
                        if(flag)
                            return;
                    }
                }
            }


























//ludeng


            public class Main {
                public static void main(String[] args) {
                    Scanner in = new Scanner(System.in);
                    while (in.hasNext()) {//注意while处理多个case
                        int n = in.nextInt();
                        int l = in.nextInt();
                        int[] a = new int[n];
                        int max = 0;
                        for(int i = 0;i<n;i++){
                            a[i] = in.nextInt();
                        }
                        sort(a);
                        int star = 0;
                        for(int i = 0;i<n;i++){
                            int d = a[i]-star;
                            star = a[i];
                            max = d>max?d:max;
                        }
                        if(a[n-1]!=l){
                            int r = l-a[n-1];//比较特殊终点不是一盏灯
                            max = r*2>max?r*2:max;

                        }
                        String result = String.format("%.2f",max/2.00);
                        System.out.println(result);
                    }
                }
                   public static void sort(int[] a){

                        for(int i = 0;i<a.length-1;i++){
                            boolean flag = true;
                            for(int j = 0;j<a.length-1-i;j++){
                                if(a[j]>a[j+1]){
                                    int temp = a[j];
                                    a[j] = a[j+1];
                                    a[j+1] = temp;
                                    flag = false;
                                }
                            }
                            if(flag)
                                return;
                        }
                    }
                }